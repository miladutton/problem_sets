library("knitr")     # for rendering the RMarkdown file
library("tidyverse") # for plotting (and many more cool things we'll discover later)
# these options here change the formatting of how comments are rendered
# in RMarkdown
opts_chunk$set(comment = "",
fig.show = "hold")
df.diamonds = diamonds
describe(diamonds)
head(diamonds)
ggplot(data = df.diamonds)
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price))
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "bar")
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "bar")
help(stat_summary)
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "median",
geom = "bar")
ggplot(df.diamonds,
aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "point")
theme_set(theme_classic() + # set the theme
theme(text = element_text(size = 20))) # set the default text size
ggplot(data = df.diamonds,
mapping = aes(x = carat,
y = price)) +
geom_point()
ggplot(data = df.diamonds,
mapping = aes(x = carat,
y = price,
color = color)) +
geom_point()
vignette("ggplot2-specs")
vignette("ggplot2-specs")
ggplot(data = df.diamonds,
mapping = aes(x = depth,
y = table,
color = color)) +
geom_point()
ggplot(data = df.diamonds,
mapping = aes(x = depth,
y = table,
color = color)) +
geom_point(0.3)
ggplot(data = df.diamonds,
mapping = aes(x = depth,
y = table,
color = color)) +
geom_point(alpha = 0.3)
ggplot(data = df.diamonds,
mapping = aes(x = cut,
y = price,
group = 1)) +
stat_summary(fun = "mean",
geom = "line")
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun.data = "mean_cl_boot",
geom = "pointrange")
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange") +
stat_summary(fun = "mean",
geom = "point",
color = "red")
# I've changed the order in which the means and error bars are drawn.
ggplot(df.diamonds,
aes(x = clarity,
y = price)) +
stat_summary(fun = "mean",
geom = "point",
color = "red") +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange")
ggplot(data = df.diamonds,
mapping = aes(x = clarityr,
y = price)) +
stat_summary(fun = "mean",
geom = "bar")
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun = "mean",
geom = "bar")
ggplot(data = df.diamonds,
mapping = aes(x = depth,
y = table,
color = color)) +
geom_point()
# make advanced practice plot 1 here
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange") +  # Adds error bars
stat_summary(fun = "mean",
geom = "point",
color = "red")
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun = "mean",
geom = "bar",
fill = "steelblue",
color = "black") +  # Creates the bar graph
stat_summary(fun.data = "mean_cl_boot",
geom = "errorbar",
width = 0.2)
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price,
group = cut)) +
stat_summary(fun = "mean",
geom = "line")
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price,
group = cut,
color = cut)) +
stat_summary(fun = "mean",
geom = "line",
linewidth = 2)
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price,
group = cut,
color = cut)) +
stat_summary(fun = "mean",
geom = "bar")
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price,
group = cut,
fill = cut)) +
stat_summary(fun = "mean",
geom = "bar",
position = position_dodge())
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price,
group = cut,
fill = cut)) +
stat_summary(fun = "mean",
geom = "bar",
position = position_dodge(width = 0.9),
color = "black") +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange",
position = position_dodge(width = 0.9))
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun = "mean",
geom = "bar",
fill = "lightblue",
color = "black") +  # Creates the bar graph
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange",
width = 0.2)
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun = "mean",
geom = "bar",
fill = "lightblue",
color = "black") +  # Creates the bar graph
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange",
width = 0.2)
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun = "mean",
geom = "bar",
fill = "lightblue",
color = "black") +  # Creates the bar graph
stat_summary(fun.data = "mean_cl_boot",
geom = "errorbar",
width = 0.2)
include_graphics("figures/vis1_practice_plot3.png")
library("knitr")     # for rendering the RMarkdown file
library("tidyverse") # for plotting (and many more cool things we'll discover later)
# these options here change the formatting of how comments are rendered
# in RMarkdown
opts_chunk$set(comment = "",
fig.show = "hold")
df.diamonds = diamonds
ggplot(data = df.diamonds)
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price))
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "mean", #computes the mean
geom = "bar") # plots it as a bar graph
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "bar")
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "median", # can vary this function
geom = "bar")
ggplot(df.diamonds,
aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "point") # this is my favorite way to look at data!
library(ggthemes)
theme_set(theme_few() + # set the theme
theme(text = element_text(size = 20))) # set the default text size
ggplot(data = df.diamonds,
mapping = aes(x = carat,
y = price)) +
geom_point()
ggplot(data = df.diamonds,
mapping = aes(x = carat,
y = price,
color = color)) +
geom_point()
ggplot(data = df.diamonds,
mapping = aes(x = depth,
y = table,
color = color)) +
geom_point()
=======
ggplot(data = df.diamonds,
mapping = aes(x = carat,
y = price)) +
geom_point()
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price))
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "mean", #computes the mean
geom = "bar") # plots it as a bar graph
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "bar")
help(stat_summary)
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "median", # can vary this function
geom = "bar")
ggplot(df.diamonds,
aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "point") # this is my favorite way to look at data!
library(ggthemes)
theme_set(theme_few() + # set the theme
theme(text = element_text(size = 20))) # set the default text size
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price))
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "mean", #computes the mean
geom = "bar") # plots it as a bar graph
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "bar")
help(stat_summary)
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price)) +
stat_summary(fun = "median", # can vary this function
geom = "bar")
ggplot(df.diamonds,
aes(x = color,
y = price)) +
stat_summary(fun = "mean",
geom = "point") # this is my favorite way to look at data!
library(ggthemes)
theme_set(theme_few() + # set the theme
theme(text = element_text(size = 20))) # set the default text size
ggplot(data = df.diamonds,
mapping = aes(x = carat,
y = price)) +
geom_point()
ggplot(data = df.diamonds,
mapping = aes(x = carat,
y = price,
color = color)) +
geom_point()
vignette("ggplot2-specs")
ggplot(data = df.diamonds,
mapping = aes(x = depth,
y = table,
color = color)) +
geom_point()
=======
include_graphics("figures/vis1_practice_plot1.png")
ggplot(data = df.diamonds,
mapping = aes(x = depth,
y = table,
color = color)) +
geom_point()
# make advanced practice plot 1 here
include_graphics("figures/vis1_practice_plot1a.png")
ggplot(data = df.diamonds,
mapping = aes(x = depth,
y = table,
color = color)) +
geom_point(alpha = 0.3)
ggplot(data = df.diamonds,
mapping = aes(x = cut,
y = price,
group = 1)) +
stat_summary(fun = "mean",
geom = "line")
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun.data = "mean_cl_boot",
geom = "pointrange")
help(mean_cl_boot)
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange") +
stat_summary(fun = "mean",
geom = "point",
color = "red")
# I've changed the order in which the means and error bars are drawn.
ggplot(df.diamonds,
aes(x = clarity,
y = price)) +
stat_summary(fun = "mean",
geom = "point",
color = "red") +
stat_summary(fun.data = "mean_cl_boot",
geom = "linerange")
<<<<<<< HEAD
include_graphics("figures/vis1_practice_plot2.png")
<<<<<<< HEAD
<<<<<<< HEAD
include_graphics("figures/vis1_practice_plot2a.png")
ggplot(data = df.diamonds,
mapping = aes(x = color,
y = price,
group = cut)) +
stat_summary(fun = "mean",
geom = "line")
<<<<<<< HEAD
ggplot(data = df.diamonds,
mapping = aes(x = clarity,
y = price)) +
stat_summary(fun = "mean",
geom = "bar",
fill = "lightblue",
color = "black") +  # Creates the bar graph
stat_summary(fun.data = "mean_cl_boot",
geom = "errorbar",
width = 0.2)
